# ----------  Build stage ----------
FROM node:20-alpine AS builder

# 1. Set workdir and turn on corepack (enables pnpm/yarn if you need them)
WORKDIR /app
ENV NODE_ENV=production

# 2. Install dependencies separately for better cache usage
COPY package*.json ./
RUN npm ci --omit=dev          # reproducible installs & no devDeps :contentReference[oaicite:5]{index=5}

# 3. Copy the source and build
COPY . .
RUN npm run build              # generates .next/ bundle :contentReference[oaicite:6]{index=6}

# ----------  Runtime stage ----------
FROM node:20-alpine AS runner
WORKDIR /app
ENV NODE_ENV=production

# 4. Bring over only what the server needs
COPY --from=builder /app/.next              ./.next
COPY --from=builder /app/public             ./public
COPY --from=builder /app/package.json       ./package.json
COPY --from=builder /app/node_modules       ./node_modules

# 5. Optional: use Next.js “standalone” output to copy even less
# (needs `output: 'standalone'` in next.config.js) :contentReference[oaicite:7]{index=7}

EXPOSE 3000
#HEALTHCHECK CMD curl -f http://localhost:3000/ || exit 1
CMD ["node_modules/.bin/next", "start"]
